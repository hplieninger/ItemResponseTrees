% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate-data.R
\name{irtree_gen_data}
\alias{irtree_gen_data}
\title{Generate Data}
\usage{
irtree_gen_data(
  object = NULL,
  N = NULL,
  sigma = NULL,
  theta = NULL,
  itempar = NULL,
  link = c("probit", "logit"),
  .na_okay = TRUE,
  .skip = FALSE
)
}
\arguments{
\item{object}{Object of class \code{irtree_model}. See \link{irtree_model} for more
information.}

\item{N}{Integer, the number of persons.}

\item{sigma}{Either a matrix or a function that returns a matrix. This matrix
is the variance-covariance matrix of the person parameters that is passed
to \code{\link[MASS:mvrnorm]{MASS::mvrnorm()}}. Note that the order of the person
parameters is taken from the section Processes in the model \code{object} (see
\code{\link[=irtree_model]{irtree_model()}}).}

\item{theta}{Optional numeric matrix of person parameters with one row per person and
one column per dimension (i.e., \code{object$S}). If provided, this overrides
\code{N} and \code{sigma}.}

\item{itempar}{Either a list or a function that returns a list. The list has
an element \code{beta} and an element \code{alpha}. Each of these is a
matrix of item parameters. Note that the order of items (rows) is taken from the
section Items and the order of processes (columns) is taken from the
section Processes in the \code{model} (see \code{\link[=irtree_model]{irtree_model()}}).}

\item{link}{Character. Link function to use.}

\item{.na_okay}{Logical indicating whether variables with unobserved response
categories are permitted. If not (\code{.na_okay = FALSE}), rejection sampling
is used to ensure that all categories are observed.}

\item{.skip}{Logical. Some features of the \link{irtree_model} syntax,
which are available for model fitting (e.g., \code{Addendum}), are not
implemented for data generation. Those parts of the model are ignored if
\code{.skip = TRUE}.}
}
\value{
A list with element \code{data} containing the data and an
element \code{spec} containing the true parameter values etc.
}
\description{
This function generates data from an ItemResponseTree model.
}
\examples{
m1 <- "
IRT:
t BY x1;
e BY x1;
m BY x1;
Equations:
1 = (1-m)*(1-t)*e
2 = (1-m)*(1-t)*(1-e)
3 = m
4 = (1-m)*t*(1-e)
5 = (1-m)*t*e
Class:
Tree
"
model1 <- irtree_model(m1)
dat <- irtree_gen_data(model1, N = 5, sigma = diag(3),
                       itempar = list(beta = matrix(runif(3), 1, 3),
                                      alpha = matrix(1, 1, 3)))
}
