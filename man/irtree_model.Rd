% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s3_tree_model.R
\name{irtree_model}
\alias{irtree_model}
\title{ItemResponseTree Model Syntax}
\usage{
irtree_model(model = NULL)
}
\arguments{
\item{model}{String with a specific structure as described below.}
}
\value{
List of class \code{irtree_model}. It contains the information extracted
from parsing \code{model}. Side note: The returned list contains an element
\code{mappping_matrix} that contains the pseudoitems. This information is
instructive, and it might be used as an input to the \code{\link[irtrees:dendrify]{irtrees::dendrify()}}
function of the \link[irtrees:irtrees-package]{irtrees::irtrees-package} package.
}
\description{
The ItemResponseTree model syntax describes an IR-tree model. The function
\code{irtree_model} turns a user-defined model string into a list that
represents the full model as needed by the package.
}
\section{Model}{


\enumerate{
\item The \code{model} string must contain at least the sections IRT, Class, and (if class is tree) Equations.
\item Section headings must appear on a seperate line ending with a colon (:).
\item The model may contain empty lines and comments, which begin with \code{#}.
\item Line breaks are only allowed in section IRT.
}
}

\section{IRT}{


The \code{model} must contain a section with heading IRT. Therein, the IRT
structure of the model is described in a way resembling the MODEL part of
an Mplus input file. It has a structure of \code{LV BY item1*, item2@1},
where \code{LV} is the name of the latent variable/parameter/process,
\code{item} is the name of the observed variable in the data set and this
is followed by the loading. The loading may either be fixed (e.g., to 1)
using \code{@1} or it may be set free using \code{*} or omitting the
loading completely.

Each measurement model (i.e., the LV and its items) must appear on a
seperate line ending with a semicolon. Items must be seperated by
commas. Linebreaks are allowed. For example:

\preformatted{
  IRT:
  t  BY x1, x2, x3, x4, x5, x6;
  e  BY x1@1, x2@1, x3@1, x4@1, x5@1, x6@1;
  m  BY x1@1, x2@1, x3@1, x4@1, x5@1, x6@1;}
}

\section{Equations}{


The \code{model} must contain a section with heading Equations if Class is
Tree.
Therein, the model equations are described.
They have a structure similar to \code{Cat = p1*(1-p2)}, where \code{Cat}
is any observed response category in the data set.
The names of the parameters must be equal to those of the latent variables
in the section IRT (combined with Subtree if specified).

The equations may contain only products and not sums.
That is, it is not possible to estimate genuine mixture models as, for
example, in the package \href{https://github.com/hplieninger/mpt2irt}{mpt2irt}.

Each equation must appear on a separate, non-broken line. For example:

\preformatted{
  Equations:
  1 = (1-m)*(1-t)*e
  2 = (1-m)*(1-t)*(1-e)
  3 = m
  4 = (1-m)*t*(1-e)
  5 = (1-m)*t*e}
}

\section{Subtree}{


The \code{model} may contain a section with heading Subtree.
This is necessary if a process in the model equations (section Equations)
may correspond to different latent variables (section IRT).
For example, when analyzing a Big Five data set, one may wish to specify
only one extremity process e for all items but multiple target traits t,
namely, one for each of the five scales.
In such a case, the section Equations would list only the parameter t,
while the section IRT would list the parameters t1, ..., t5.

In the framework of MPT, one would think of such a situation in terms of
multiple albeit similar trees with specific parameter contraints across
trees.
For example, one would use one tree for each Big Five scale and fix the
response style parameters to equality across trees but not the target trait
parameters.

Each line in this section has a structure of \code{process = subprocess + subprocess}, where \code{process} is the name of the process used only in
section Equations and \code{subprocess} it the name of the process used only in
section IRT.
Use one line for each definition. For example:

\preformatted{
  Subtree:
  t = t1 + t2 + t3 + t4 + t5}
}

\section{Class}{


The \code{model} must contain a section with heading Class to specify the
type/class of IRT model to use.
Currently, may be either \code{Tree} or \code{GRM} (graded response model). For
example:

\preformatted{
  Class:
  Tree}
}

\section{Constraints}{


The \code{model} may contain a section with heading Constraints to specify
equality constraints of latent variables.
For example, in a sequential model as proposed by Tutz as well as Verhelst,
one would specify two processes for a 3-point item. The first process would
correspond to a pseudoitem of \code{0-1-1} and the second process to a
pseudoitem of \code{NA-0-1}.
However, the latent variables corresponding to these processes would
typically be assumed to be equal and need thus be constrained accordingly.

Each line in this section has a structure of \code{LV1 = LV2}, where
\code{LV1} and \code{LV2} are the names of the latent variables used in
section IRT.
Use one line for each definition. For example:

\preformatted{
  Constraints:
  LV1 = LV2
  LV1 = LV3}
}

\section{Addendum}{


The \code{model} may contain a section with heading Addendum if
\code{backend = "mplus"} is used for estimation.
Any code in this section is directly pasted in the \code{MODEL} section of
the Mplus input file.
Use a semicolon at the end of each line; lines must not exceed 90 characters.
Note that the addendum is ignored in \code{\link[=irtree_sim_data]{irtree_sim_data()}}. For example:

\preformatted{
  Addendum:
  e WITH t@0;
  m WITH t@0;}
}

\examples{
m1 <- "
# Comment
IRT:
t1 BY x1@1, x2*, x3*;
t2 BY x4@1, x5*, x6*;
e  BY x1@1, x2@1, x3@1, x4@1, x5@1, x6@1;
m  BY x1@1, x2@1, x3@1, x4@1, x5@1, x6@1;

Subtree:
t = t1 + t2

Equations:
1 = (1-m)*(1-t)*e
2 = (1-m)*(1-t)*(1-e)
3 = m
4 = (1-m)*t*(1-e)
5 = (1-m)*t*e

Class:
Tree
"

model <- irtree_model(m1)
}
